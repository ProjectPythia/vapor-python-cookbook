{"version":2,"kind":"Notebook","sha256":"520bbf9b0b66c126c083cffd320bb052d43dd06cbd13c03cbb08d4f2a0c67c40","slug":"notebooks.workflow-example","location":"/notebooks/workflow_example.ipynb","dependencies":[],"frontmatter":{"title":"Generic Workflow","content_includes_title":false,"kernelspec":{"name":"python3","display_name":"vapor","language":"python"},"jupytext":{},"authors":[{"nameParsed":{"literal":"Project Pythia Community","given":"Project Pythia","family":"Community"},"name":"Project Pythia Community","url":"https://projectpythia.org/","id":"contributors-myst-generated-uid-0"}],"open_access":true,"license":{"content":{"id":"Apache-2.0","url":"https://opensource.org/licenses/Apache-2.0","name":"Apache License 2.0","free":true,"osi":true},"code":{"id":"CC-BY-4.0","url":"https://creativecommons.org/licenses/by/4.0/","name":"Creative Commons Attribution 4.0 International","free":true,"CC":true}},"github":"https://github.com/projectpythia/vapor-python-cookbook","copyright":"2024","numbering":{"title":{"offset":1}},"edit_url":"https://github.com/projectpythia/vapor-python-cookbook/blob/HEAD/notebooks/workflow_example.ipynb","exports":[{"format":"ipynb","filename":"workflow_example.ipynb","url":"/vapor-python-cookbook/_preview/30/build/workflow_example-63ad5f37e29224d44a6b0266771d71bb.ipynb"}]},"widgets":{},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","data":{"lines_to_next_cell":0,"region_name":"md"},"children":[{"type":"paragraph","position":{"start":{"line":4,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"This shows an example workflow with vapor.\nWe begin by creating a session and opening a dataset.\nYou can have multiple sessions open at the same time.","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"L0SSc1f5mX"}],"key":"U3SBQlCXmQ"}],"key":"tmWyVPjADo"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"import example_utils\nfrom vapor import session, renderer, dataset, camera","key":"CxLI5mksxH"},{"type":"output","id":"2IoItcxF-08kpEpEGlSST","data":[{"output_type":"error","traceback":"\u001b[31m---------------------------------------------------------------------------\u001b[39m\n\u001b[31mModuleNotFoundError\u001b[39m                       Traceback (most recent call last)\n\u001b[36mCell\u001b[39m\u001b[36m \u001b[39m\u001b[32mIn[1]\u001b[39m\u001b[32m, line 1\u001b[39m\n\u001b[32m----> \u001b[39m\u001b[32m1\u001b[39m \u001b[38;5;28;01mimport\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34;01mexample_utils\u001b[39;00m\n\u001b[32m      2\u001b[39m \u001b[38;5;28;01mfrom\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34;01mvapor\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[38;5;28;01mimport\u001b[39;00m session, renderer, dataset, camera\n\n\u001b[36mFile \u001b[39m\u001b[32m~/work/vapor-python-cookbook/vapor-python-cookbook/notebooks/example_utils.py:20\u001b[39m\n\u001b[32m     16\u001b[39m     sys.path.append(\u001b[33m'\u001b[39m\u001b[33m..\u001b[39m\u001b[33m'\u001b[39m)\n\u001b[32m     19\u001b[39m \u001b[38;5;28;01mfrom\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34;01minspect\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[38;5;28;01mimport\u001b[39;00m signature\n\u001b[32m---> \u001b[39m\u001b[32m20\u001b[39m \u001b[38;5;28;01mimport\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34;01mnumpy\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[38;5;28;01mas\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34;01mnp\u001b[39;00m\n\u001b[32m     21\u001b[39m \u001b[38;5;28;01mfrom\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34;01mmath\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[38;5;28;01mimport\u001b[39;00m sin\n\u001b[32m     23\u001b[39m \u001b[38;5;28;01mdef\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34mSampleFunctionOnRegularGrid\u001b[39m(f, ext=\u001b[38;5;28;01mNone\u001b[39;00m, shape=\u001b[38;5;28;01mNone\u001b[39;00m):\n\n\u001b[31mModuleNotFoundError\u001b[39m: No module named 'numpy'","ename":"ModuleNotFoundError","evalue":"No module named 'numpy'"}],"key":"UkAW28O9xN"}],"key":"yhZbSi0U4J"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"ses = session.Session()\ndata = example_utils.OpenExampleDataset(ses)","key":"UTnFFFC0JR"},{"type":"output","id":"OkHwPv-dh-IcR0dOkWIKd","data":[],"key":"JprcbAvojO"}],"key":"dTTERI42BK"},{"type":"block","kind":"notebook-content","data":{"lines_to_next_cell":0,"region_name":"md"},"children":[{"type":"heading","depth":2,"position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Dump the dataset metadata","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"AM8l2K8gtP"}],"identifier":"dump-the-dataset-metadata","label":"Dump the dataset metadata","html_id":"dump-the-dataset-metadata","implicit":true,"key":"sSQzEeAAbm"}],"key":"SN3RLdSFYy"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"print(\"Time Coordinate Variable Name:\", data.GetTimeCoordVarName())\nprint(\"Coordinate Variable Names:\", data.GetCoordVarNames())\n\nprint(\"Dimensions:\")\nfor dim in data.GetDimensionNames():\n    print(f\"  {dim}:\", data.GetDimensionLength(dim, 0))\n\nprint(\"Data Variables:\")\nfor var in data.GetDataVarNames():\n    print(f\"  {var}\")\n    print(f\"    Time Varying:\", bool(data.IsTimeVarying(var)))\n    print(f\"    Dimensionality:\", data.GetVarGeometryDim(var))\n    print(f\"    Coordinates:\", data.GetVarCoordVars(var, True))\n    print(\"     Data Range:\", data.GetDataRange(var))","key":"GiuxKrpkrf"},{"type":"output","id":"5gU4zJROjpU0WkJ34EbME","data":[],"key":"GgMMEsK211"}],"key":"kN588zPRff"},{"type":"block","kind":"notebook-content","data":{"lines_to_next_cell":0,"region_name":"md"},"children":[{"type":"heading","depth":2,"position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Render the first 2D variable as a pseudocolor","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"e5YkshPwkq"}],"identifier":"render-the-first-2d-variable-as-a-pseudocolor","label":"Render the first 2D variable as a pseudocolor","html_id":"render-the-first-2d-variable-as-a-pseudocolor","implicit":true,"key":"XK2lrFhSys"}],"key":"p3hBbhSYON"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"first_2d_var = data.GetDataVarNames(2)[0]\nprint(f\"Rendering 2D variable {first_2d_var}\")\n\nren = data.NewRenderer(renderer.TwoDDataRenderer)\nren.SetVariableName(first_2d_var)\nren.GetPrimaryTransferFunction().SetMinMapValue(-1)\nren.GetPrimaryTransferFunction().SetMaxMapValue(1)\n\nses.GetCamera().ViewAll()\nses.Show()\n\nses.DeleteRenderer(ren)","key":"xYe9nx83yL"},{"type":"output","id":"N3e087Gj824mZSwb5zasR","data":[],"key":"da9MCIcHmM"}],"key":"OZy1WXe6hE"},{"type":"block","kind":"notebook-content","data":{"lines_to_next_cell":0,"region_name":"md"},"children":[{"type":"heading","depth":2,"position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Render U10 and V10 as barbs over a map","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"eg1KpbD6c2"}],"identifier":"render-u10-and-v10-as-barbs-over-a-map","label":"Render U10 and V10 as barbs over a map","html_id":"render-u10-and-v10-as-barbs-over-a-map","implicit":true,"key":"OGieaS9kXt"}],"key":"MhMhlP6YT6"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# If your dataset is geo-referenced, this will automatically render a geographically correct map.\n# map_ren = data.NewRenderer(renderer.ImageRenderer)\n\nbarbs = data.NewRenderer(renderer.BarbRenderer)\nbarbs.SetDimensions(2)\nbarbs.SetFieldVariableNames(['U10', 'V10'])\nbarbs.SetLineThickness(2)\n\nses.Show()\nses.DeleteRenderer(barbs)","key":"g4SylC3VR9"},{"type":"output","id":"gj-n58Ks9HhjcAJglcfr0","data":[],"key":"OV2BAKqnQu"}],"key":"n2JZlt8LRV"},{"type":"block","kind":"notebook-content","data":{"lines_to_next_cell":0,"region_name":"md"},"children":[{"type":"heading","depth":2,"position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Simulate and render a flow advection","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"c51oGtlDH3"}],"identifier":"simulate-and-render-a-flow-advection","label":"Simulate and render a flow advection","html_id":"simulate-and-render-a-flow-advection","implicit":true,"key":"yF3V1YA28s"}],"key":"Rg3JlMLgUW"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"flow = data.NewRenderer(renderer.FlowRenderer)\nflow.SetFieldVariableNames(['U10', 'V10'])\n\nses.Show()\n\nses.DeleteRenderer(flow)","key":"XsVv5MYr1n"},{"type":"output","id":"xBymgfuA_sWaU0DDbbO1y","data":[],"key":"JlrlCvngf7"}],"key":"ZzVbMjWNBV"},{"type":"block","kind":"notebook-content","data":{"lines_to_next_cell":0,"region_name":"md"},"children":[{"type":"heading","depth":2,"position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Volume render a 3D variable","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"AhzUQo4GYW"}],"identifier":"volume-render-a-3d-variable","label":"Volume render a 3D variable","html_id":"volume-render-a-3d-variable","implicit":true,"key":"HizzW0Ct1w"}],"key":"auptTyYCLe"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"volume = data.NewRenderer(renderer.VolumeRenderer)\nvolume.SetVariableName(\"V\")\n\ntf = volume.GetPrimaryTransferFunction()\ntf.SetOpacityList([1, 0, 0, 1])\n\nses.GetCamera().ViewAll()\nses.Show()\n\n# Show a colorbar for the volume rendering\ntf.ShowMatPlotLibColorbar(label=\"V\")","key":"VGVhzsSLql"},{"type":"output","id":"5DI4dyz7TTbKbCXr6Fy4y","data":[],"key":"Am5EFARgzL"}],"key":"Y3LTdkB6tX"},{"type":"block","kind":"notebook-content","data":{"lines_to_next_cell":0,"region_name":"md"},"children":[{"type":"heading","depth":2,"position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Scale the dataset Z axis","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"mO5v2Y2lSy"}],"identifier":"scale-the-dataset-z-axis","label":"Scale the dataset Z axis","html_id":"scale-the-dataset-z-axis","implicit":true,"key":"fYAyUu8qpp"},{"type":"paragraph","position":{"start":{"line":4,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Vapor will automatically scale the Z axis of a dataset to produce reasonable results.\nThis can be manually adjusted as shown below.","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"zXTYTLjodt"}],"key":"ED5tAUkFeC"}],"key":"u70jdaUuRd"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"scales = data.GetTransform().GetScales()\nprint(\"Default dataset scaling =\", scales);\nscales[2] *= 0.3\ndata.GetTransform().SetScales(scales)\nprint(\"New dataset scaling =\", data.GetTransform().GetScales());\nses.Show()","key":"YjPOLOiJyU"},{"type":"output","id":"RGDacil8mbO2ce1_St_Vl","data":[],"key":"o8KOoghsi6"}],"key":"qdGfav7Nqv"},{"type":"block","kind":"notebook-content","data":{"lines_to_next_cell":0,"region_name":"md"},"children":[{"type":"heading","depth":2,"position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Add axis annotations to the rendering","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"vLLYLxgcIx"}],"identifier":"add-axis-annotations-to-the-rendering","label":"Add axis annotations to the rendering","html_id":"add-axis-annotations-to-the-rendering","implicit":true,"key":"rJVu79Baru"}],"key":"HhNsujOC9l"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"annotations = ses.GetAxisAnnotations()\nannotations.SetAxisAnnotationEnabled(True)\nses.Show()","key":"qxUbSxxE8h"},{"type":"output","id":"17q5muVqRcNYcZ9HYn6AT","data":[],"key":"LDubTLWOqO"}],"key":"OIgW7HoIyt"},{"type":"block","kind":"notebook-content","data":{"lines_to_next_cell":0,"region_name":"md"},"children":[{"type":"heading","depth":2,"position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Export the session for use in the Vapor GUI application","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"MRRRDxytdY"}],"identifier":"export-the-session-for-use-in-the-vapor-gui-application","label":"Export the session for use in the Vapor GUI application","html_id":"export-the-session-for-use-in-the-vapor-gui-application","implicit":true,"key":"uB2S719iNN"},{"type":"paragraph","position":{"start":{"line":4,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Sessions created in Python can be saved as a .vs3 file.\nThese files can then be opened in the Vapor GUI application and explored interactively.\nConversely, sessions created in the Vapor GUI can be loaded into Python with ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"wThgXgXbxH"},{"type":"inlineCode","value":"Session.Load(path)","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"hyeTgkLW6R"}],"key":"QHtuNJCWPC"},{"type":"paragraph","position":{"start":{"line":8,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"text","value":"Since this example uses a dynamically generated dataset, the session cannot be saved as\nit would point to a dataset that does not exist on disk. If you were using a physical dataset,\nthis would work.","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"WoVMio7XJd"}],"key":"YOFofQdqa9"}],"key":"KIDqx9mUW3"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"ses.Save(\"tutorial.vs3\")","key":"lfiiqVVM73"},{"type":"output","id":"joLZGZEsHQAz6FkGUaYix","data":[],"key":"YPGxRP9h9v"}],"key":"qKXdgK0Ho6"}],"key":"L7N7UpCQD4"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"AGU 2023 Tutorial: Visualizing 2D and 3D Geoscience Data in Python","url":"/notebooks/agu-2023-example","group":"Example workflows"},"next":{"title":"Visualizing the cloud-capped boundary layer","url":"/notebooks/cloudfield-visualizer","group":"Example workflows"}}},"domain":"http://localhost:3000"}