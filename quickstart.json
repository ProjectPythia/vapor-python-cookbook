{"version":2,"kind":"Notebook","sha256":"f9bf128d1d065aab3ac444c210dd1b8d699d43a416231b9341a78354ff514044","slug":"quickstart","location":"/notebooks/quickstart.ipynb","dependencies":[],"frontmatter":{"title":"Quickstart","content_includes_title":false,"kernelspec":{"name":"python3","display_name":"vapor","language":"python"},"authors":[{"nameParsed":{"literal":"Project Pythia Community","given":"Project Pythia","family":"Community"},"name":"Project Pythia Community","url":"https://projectpythia.org/","id":"contributors-myst-generated-uid-0"}],"open_access":true,"license":{"content":{"id":"Apache-2.0","url":"https://opensource.org/licenses/Apache-2.0","name":"Apache License 2.0","free":true,"osi":true},"code":{"id":"CC-BY-4.0","url":"https://creativecommons.org/licenses/by/4.0/","name":"Creative Commons Attribution 4.0 International","free":true,"CC":true}},"github":"https://github.com/projectpythia/vapor-python-cookbook","copyright":"2024","numbering":{"title":{"offset":1}},"edit_url":"https://github.com/projectpythia/vapor-python-cookbook/blob/main/notebooks/quickstart.ipynb","exports":[{"format":"ipynb","filename":"quickstart.ipynb","url":"/vapor-python-cookbook/build/quickstart-e2d31156b09041fb88f7c76a3aa2fb80.ipynb"}]},"widgets":{},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"This guide aims to help new users get started with VAPOR’s Python API, showcasing a typical workflow using an example dataset. We will cover some of the key features of the VAPOR API, and explain some of the essential concepts specific to 3D visualization in VAPOR.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"f4f6aCPgCe"}],"key":"ahMtWqgd6a"}],"key":"jBXpGywVOp"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Creating visualization in VAPOR can be divided into 4 steps, which we will go through in this notebook.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"HDv9hFwtlY"}],"key":"Amo81fpuKA"},{"type":"list","ordered":true,"start":1,"spread":false,"position":{"start":{"line":2,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":2,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"strong","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Import Data","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"i9hQbWZkb7"}],"key":"FT5UjrGep3"}],"key":"vXfXvVVaq2"}],"key":"Z4TkWQ44yc"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"strong","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"Select and Apply Renderers","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"XMEOVqr3WO"}],"key":"HSkIg6olaK"}],"key":"kZteZ5VUsL"}],"key":"hi47cRTrt2"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"strong","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Annotate","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"hvrRhCNHVN"}],"key":"p0BKtCXwpl"}],"key":"y1EesODvfL"}],"key":"qdU1OJiKsL"},{"type":"listItem","spread":true,"position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"strong","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"Export","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"ezz3cTB0oM"}],"key":"PjK1hlnQ1U"}],"key":"l1PavO9pNE"}],"key":"s9sU5xZlhw"}],"key":"Ie041w1uyO"}],"key":"lduFzh1EtN"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Setup","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"SZiUdsosTA"}],"identifier":"setup","label":"Setup","html_id":"setup","implicit":true,"key":"BC3eSKcpKB"}],"key":"ELI4PBTe4B"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Import VAPOR","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"LTWjkuDjYT"}],"identifier":"import-vapor","label":"Import VAPOR","html_id":"import-vapor","implicit":true,"key":"oqJ3LDpw5F"}],"key":"AVTDRaWZLc"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"To begin, we will import the vapor modules we will be using.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"q62gnSvuYc"}],"key":"StN0hts49o"}],"key":"uQQMI2LAYC"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"from vapor import session, renderer, dataset\nfrom vapor.animation import Animation\nfrom vapor.dataset import Dataset","key":"XA9IKgY39D"},{"type":"output","id":"2FsQ1RvH872PYpvwD1qJH","data":[{"output_type":"error","traceback":"\u001b[31m---------------------------------------------------------------------------\u001b[39m\n\u001b[31mModuleNotFoundError\u001b[39m                       Traceback (most recent call last)\n\u001b[36mCell\u001b[39m\u001b[36m \u001b[39m\u001b[32mIn[1]\u001b[39m\u001b[32m, line 1\u001b[39m\n\u001b[32m----> \u001b[39m\u001b[32m1\u001b[39m \u001b[38;5;28;01mfrom\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34;01mvapor\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[38;5;28;01mimport\u001b[39;00m session, renderer, dataset\n\u001b[32m      2\u001b[39m \u001b[38;5;28;01mfrom\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34;01mvapor\u001b[39;00m\u001b[34;01m.\u001b[39;00m\u001b[34;01manimation\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[38;5;28;01mimport\u001b[39;00m Animation\n\u001b[32m      3\u001b[39m \u001b[38;5;28;01mfrom\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34;01mvapor\u001b[39;00m\u001b[34;01m.\u001b[39;00m\u001b[34;01mdataset\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[38;5;28;01mimport\u001b[39;00m Dataset\n\n\u001b[31mModuleNotFoundError\u001b[39m: No module named 'vapor'","ename":"ModuleNotFoundError","evalue":"No module named 'vapor'"}],"key":"N9MCJlPvCl"}],"key":"KSLJuya9iJ"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Initialize Session","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"n86DQteMl1"}],"identifier":"initialize-session","label":"Initialize Session","html_id":"initialize-session","implicit":true,"key":"QH0245w87R"}],"key":"v0B1Kfyo09"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"3D visualizations in VAPOR are managed using ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"lXbYHftcYU"},{"type":"link","url":"https://ncar.github.io/VaporDocumentationWebsite/pythonAPIReference/userModules/vapor.session.html","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"sessions","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"fEIP6E47H0"}],"urlSource":"https://ncar.github.io/VaporDocumentationWebsite/pythonAPIReference/userModules/vapor.session.html","key":"m8CG1eIhVU"},{"type":"text","value":". A session captures all the necessary information to recreate a visualization, including dataset details, rendering settings, and camera positions. In this notebook, we’ll create a new visualization within a session. Later, we can save this session to a file, allowing it to be opened in VAPOR’s GUI application or another Python script.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"uYJh5CMlp5"}],"key":"k6bxvHvkJu"}],"key":"XSp3aT95ia"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"ses = session.Session()","key":"Hn4CGUcLsd"},{"type":"output","id":"CE3_vf5EMzQG-msvMdS31","data":[],"key":"lmeMlZ1xU0"}],"key":"NgDjgIBDrM"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Load Data","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"eoDoZOaQqL"}],"identifier":"load-data","label":"Load Data","html_id":"load-data","implicit":true,"key":"bkSteoMA9q"}],"key":"ybcIm9PBby"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Once we’ve created our session, we’ll want to load our dataset. Vapor supports a number of scientific data formats, which can be viewed with ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"wJXSAegUI5"},{"type":"inlineCode","value":"Dataset.GetDatasetTypes()","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"BJ1BR3s3Oq"}],"key":"pXYTuXnTsH"}],"key":"JmtESXtpIn"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"Dataset.GetDatasetTypes()","key":"zCQDJxylD4"},{"type":"output","id":"yibzhPeefbaaYVxR8dGmv","data":[],"key":"Hf5CiW5wsa"}],"key":"a3l9OXnibM"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"In this example, we will be using data from the WRF model of Hurricane Katrina from 2005. The following cell will download the data from NCAR’s ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"PFekd6Za0v"},{"type":"link","url":"https://rda.ucar.edu/datasets/ds897.7/dataaccess/#","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Research Data Archives","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"i8KmHySsGC"}],"urlSource":"https://rda.ucar.edu/datasets/ds897.7/dataaccess/#","key":"gzW1St2WOT"},{"type":"text","value":".","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"dD1xXmh08o"}],"key":"yHZe7mV58b"}],"key":"FfRQkYwis5"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"import os\nimport requests\nimport zipfile\nurl = 'https://data.rda.ucar.edu/ds897.7/Katrina.zip'\nextract_to = './data'\nzip_name = \"Katrina.zip\"\ndata_file = './data/wrfout_d02_2005-08-29_02.nc'\n\n# Check if the data file already exists\nif not os.path.exists(data_file):\n    # Download zip\n    with requests.get(url, stream=True) as r:\n        r.raise_for_status()\n        with open(zip_name, 'wb') as f:\n            for chunk in r.iter_content(chunk_size=8192):\n                f.write(chunk)\n    # Extract the file\n    with zipfile.ZipFile(zip_name, 'r') as zip_ref:\n        zip_ref.extractall(extract_to)\n\n    # Clean up the zip file\n    os.remove(zip_name)\n\n    print(f\"Data downloaded and extracted to {data_file}\")\nelse:\n    print(f\"Data file already exists at {data_file}, skipping download and extraction.\")\n","key":"URnxbWYoDu"},{"type":"output","id":"7RGuTZEM5_QfDlmlFk_8T","data":[],"key":"iyNj7Atyj2"}],"key":"P4W4y7w8JO"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"To load the dataset into our session, we use ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"bUKGp7uohW"},{"type":"inlineCode","value":"ses.OpenDataset()","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Ztk0JR31m5"},{"type":"text","value":", which requires two parameters. The first parameter specifies the file format, in this case, dataset.WRF. The second parameter is a list of file paths. Since we only have one file, we provide a list containing just that file.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"RngFMntxcF"}],"key":"Dh83fseFrf"}],"key":"Yx25dX7sgw"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"data = ses.OpenDataset(dataset.WRF, [\"data/wrfout_d02_2005-08-29_02.nc\"])","key":"W242HzBFIQ"},{"type":"output","id":"kBpcwriJ18XstRnTkKDxz","data":[],"key":"ClFIvQCBED"}],"key":"inSt7hqETs"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"The dataset contains a number of atmospheric variables that describe attributes of the storm, such as pressure, wind, clouds, and rain. For this example, we will use three variables: ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"o1hGnGHb2h"},{"type":"inlineCode","value":"U10","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"BZDFAu2bZ9"},{"type":"text","value":", a 2 dimensional variable that describes the 10 meter zonal wind speed, ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"lNxybK8Hrz"},{"type":"inlineCode","value":"QCLOUD","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"TwbqvYQfSj"},{"type":"text","value":", a 3 dimensional variable to visualize the cloud formation of the storm, and ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"HEyvqVzdjK"},{"type":"inlineCode","value":"HGT","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Hf8E57eCu5"},{"type":"text","value":", a 2D variable to visualize the topography of the land. Below we will display the metadata for these variables.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"DzMBWWZ9cC"}],"key":"vAvmUIEDP7"}],"key":"eUinR87fPe"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"print(\"Data Variables:\")\nvars = [\"U10\", \"QCLOUD\", \"HGT\"]\nfor var in data.GetDataVarNames():\n    if var in vars:\n        print(f\" {var}\")\n        print(f\"    Time Varying: False\")\n        print(f\"    Dimensionality:\", data.GetVarGeometryDim(var))\n        print(f\"    Coordinates:\", data.GetVarCoordVars(var, True))\n        print(\"     Data Range:\", data.GetDataRange(var))","key":"cUdZWv8Iv3"},{"type":"output","id":"IPOZHYUdvVh_zNa9ai7Ho","data":[],"key":"SeKD2E7m08"}],"key":"gUjrKQMJep"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Apply Renderers","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"jMlt5nJe6J"}],"identifier":"apply-renderers","label":"Apply Renderers","html_id":"apply-renderers","implicit":true,"key":"LB4KSOv257"}],"key":"QxKGQ6OGvM"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Now that we’ve loaded our data, it’s time to start the visualization process. Visualization in Vapor is based around renderers, which display data with customizable colors and opacities. Tutorials for using renderers in Vapor’s GUI can be found ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"s1fPSLuIx3"},{"type":"link","url":"https://ncar.github.io/VaporDocumentationWebsite/vaporApplicationReference/renderers.html","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"here","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"FNOtAYBi7F"}],"urlSource":"https://ncar.github.io/VaporDocumentationWebsite/vaporApplicationReference/renderers.html","key":"gb8bqeDed1"},{"type":"text","value":", and each one works similarly in Python. In this example, we’ll create a 2D data renderer and a volume renderer.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"im0zCSEFSA"}],"key":"IJuZVfxWpv"}],"key":"UlbjODLCcK"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Image Renderer","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"JP7EvvJTBx"}],"identifier":"image-renderer","label":"Image Renderer","html_id":"image-renderer","implicit":true,"key":"iUkGftQPP1"}],"key":"LMj4nSTldu"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"We will start by creating an image renderer to display the topography of the land. This dataset is georeferenced, so we can use Vapor’s builtin image simply by calling ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"zgIC9yRiav"},{"type":"inlineCode","value":"data.NewRenderer(renderer.ImageRenderer)","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"wZcenw3T3X"},{"type":"text","value":". Additionally, our dataset stores the elevation at each gridpoint in ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"sjzkXs4RdZ"},{"type":"inlineCode","value":"HGT","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"dTWwE5Up9g"},{"type":"text","value":", and by linking this to our image renderer with ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"A0p6fAv4pe"},{"type":"inlineCode","value":"land.SetHeightVariableName(\"HGT\")","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"zfKEunegAT"},{"type":"text","value":" we can render the topography in 3D.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ngnSjfwHcz"}],"key":"vdvhqgSLTG"}],"key":"j6puwksAxe"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"land = data.NewRenderer(renderer.ImageRenderer)\nland.SetHeightVariableName(\"HGT\")","key":"j2LUdoTx2D"},{"type":"output","id":"UAT6yUFqsHzJy2-SoLMNH","data":[],"key":"C5wFgInQHu"}],"key":"xyjDyTGPis"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Now, we can call ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"tGB6F7IVyw"},{"type":"inlineCode","value":"ses.Show()","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"woqghiGDTr"},{"type":"text","value":" to display our visualization!","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"CuhbxC3UH2"}],"key":"nj3nOoiRkM"}],"key":"QDQ0ONTJ6n"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"ses.Show()","key":"xcqmNzIRzQ"},{"type":"output","id":"ROIfAVcRjQTnWoBddQ9aF","data":[],"key":"j0aFd9g7u5"}],"key":"H1VvmDf2QD"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"2D Data Renderer","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"rdt8wKhKh1"}],"identifier":"id-2d-data-renderer","label":"2D Data Renderer","html_id":"id-2d-data-renderer","implicit":true,"key":"psifRwtaiA"}],"key":"xh7lIpgDql"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"The 2D Data Renderer displays a 2D data variable along the plane described by the dataset. We will use it to display our U10 variable, which represents the east/west wind speed at a 10-meter elevation. First, we select the renderer type by calling ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"UULdEc1ecg"},{"type":"inlineCode","value":"NewRenderer()","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"U82r9aomky"},{"type":"text","value":" on the dataset. Next, we specify the variable to visualize by calling ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"q0BV5rd734"},{"type":"inlineCode","value":"SetVariableName()","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"nfKq5pibA9"},{"type":"text","value":" on the renderer.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"eHgr4nlJDU"}],"key":"yaxAo2bWoQ"}],"key":"ocq4a3EW7d"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"wind = data.NewRenderer(renderer.TwoDDataRenderer)\nwind.SetVariableName(\"U10\")","key":"Ub00LN3b2d"},{"type":"output","id":"BSNtbd_NElIndwYmcnJzO","data":[],"key":"La9AXu88Y3"}],"key":"PIQ6UExD6a"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"If our image and 2D data renderers are too close to each other, it can lead to unexpected results. To prevent this, we’ll lift our image renderer slightly off the ground. We can achieve this by using ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Ju5Q1Q5J0Z"},{"type":"inlineCode","value":"GetTransform()","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"BCQsiNgMYd"},{"type":"text","value":" and ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"zhp1ParlZ0"},{"type":"inlineCode","value":"SetTranslations()","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"QpLd5dGOSe"},{"type":"text","value":" as follows.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"lr2dC11lbT"}],"key":"mCZof3U2DH"}],"key":"dSEzwu1BUw"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"land_transform = land.GetTransform()\nland_transform.SetTranslations([0, 0, 100])","key":"lwApoNvNVI"},{"type":"output","id":"5ljGkVP_G0O3BqsnVtyey","data":[],"key":"RaYOambQDe"}],"key":"rLaHW8uOe9"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"ses.Show()","key":"QHdKpBXUEB"},{"type":"output","id":"ViqpxDR7QN4_bDFiIzm-F","data":[],"key":"d2tvyWHD1g"}],"key":"BQTymu1U6K"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Volume Renderer","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"aE69YtSe2A"}],"identifier":"volume-renderer","label":"Volume Renderer","html_id":"volume-renderer","implicit":true,"key":"s6Cs5O5JlF"}],"key":"BcysbaREZl"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Next, let’s create a visualization for a three dimensional variable. The ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"wRBQ0dIz7N"},{"type":"inlineCode","value":"QCLOUD","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"YnW18BR69d"},{"type":"text","value":" variable measures the cloud density at every gridpoint. We can use a volume renderer to display where the clouds are thickest. As before, we first select our renderer and variable name.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"HGt2hXXTO3"}],"key":"sQCpI5vwYx"}],"key":"nw8dbJOlh5"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"clouds = data.NewRenderer(renderer.VolumeRenderer)\nclouds.SetVariableName(\"QCLOUD\")","key":"O0UQQ1fMQk"},{"type":"output","id":"BX0pA5d3me6_087DMExyb","data":[],"key":"hX3i9Jxk30"}],"key":"hVwditfd7E"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"We can adjust the appearance of our renderer by modifying its ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"fSoRR0d7vb"},{"type":"link","url":"https://ncar.github.io/VaporDocumentationWebsite/vaporApplicationReference/basicRendererControls.html#appearancetab","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"transfer function","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"dqPtY7p9C5"}],"urlSource":"https://ncar.github.io/VaporDocumentationWebsite/vaporApplicationReference/basicRendererControls.html#appearancetab","key":"o8NiWZQ04k"},{"type":"text","value":", which describes the color and opacity of the data in the visualization. The ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"B6x1tMR4PW"},{"type":"link","url":"https://projectpythia.org/vapor-python-cookbook/notebooks/transfer_function_example.html","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"transfer function notebook","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"F49Tpvc1gc"}],"urlSource":"https://projectpythia.org/vapor-python-cookbook/notebooks/transfer_function_example.html","key":"SvK1L51yO6"},{"type":"text","value":" provides more examples on how to customize a transfer function.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"YMafRfF6hN"}],"key":"c8u3QcPVMc"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"First, we will set the colors to a white-gray-black scale. Then, we will adjust the opacities of the renderer. We want areas with almost no clouds to be completely transparent, while areas with more clouds should be more opaque. We use ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"CtiAMzgP42"},{"type":"inlineCode","value":"SetOpacityControlPoints","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"S5VbGvJx61"},{"type":"text","value":" with a list of [value, opacity] pairs to specify the opacity of data points with a certain value.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"uwgGCziN4O"}],"key":"owxxXRonf5"}],"key":"zK8uwMqasu"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"clouds_tf = clouds.GetTransferFunction(\"QCLOUD\")\n# Load built in black to white colormap\nclouds_tf.LoadBuiltinColormap(\"Sequential/BlackWhite\")\n# Access and reverse RGB list from current color map\nnew_colors = [(r, g, b) for r, g, b, _ in list(reversed(clouds_tf.GetMatPlotLibColormap().colors))]\n# Assign new RGB colors to transfer function\nclouds_tf.SetColorRGBList(new_colors)\n# Change opacities\nclouds_tf.SetOpacityControlPoints([[0,0],[0.00001,0.01], [0.0001, 0.1], [0.0010,0.9]])","key":"lsPwWyGwgy"},{"type":"output","id":"zSk1RrbzRcehlsoJfJFCg","data":[],"key":"jhCR5jtBeX"}],"key":"pSlqN717Yr"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"To visualize the 3D structure of the clouds effectively, we need to set the camera at an appropriate angle. The ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"TPvoOximeA"},{"type":"link","url":"https://ncar.github.io/VaporDocumentationWebsite/pythonAPIReference/userModules/vapor.camera.html","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"camera module","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"MVbNMpHjvu"}],"urlSource":"https://ncar.github.io/VaporDocumentationWebsite/pythonAPIReference/userModules/vapor.camera.html","key":"MKFNyJbzNA"},{"type":"text","value":" in VAPOR offers several functions for controlling the camera’s position and orientation. Among these, the ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"BLCYnVnX9z"},{"type":"inlineCode","value":"LookAt()","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"DwUoVBk7o3"},{"type":"text","value":" function is the most robust and versatile. It takes two lists, each containing three elements representing a point in 3D space with (X, Y, Z) coordinates. The first list specifies the camera’s position, while the second list defines the point the camera is targeting.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ZwuVm2uWoP"}],"key":"HjCTCxGauV"}],"key":"GvIKK67v8p"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"ses.GetCamera().LookAt(\n    [-757400, 2189800, 761600], # Position\n    [-420800, 2737200, 15700]   # Target\n    )\nses.Show()","key":"WkfC2RhDb7"},{"type":"output","id":"1MyVSPrFMeWUhAnuY42Th","data":[],"key":"ndFCcmH0Gq"}],"key":"bFDYWT0tvu"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Add Annotations","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"VwXXagEiYg"}],"identifier":"add-annotations","label":"Add Annotations","html_id":"add-annotations","implicit":true,"key":"afu8yVh4jG"}],"key":"anooUDgWrc"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"We can finalize our visualization with some ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"JPc40rsO69"},{"type":"link","url":"https://ncar.github.io/VaporDocumentationWebsite/pythonAPIReference/userModules/vapor.annotations.html","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"annotations","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"aRliciCDLg"}],"urlSource":"https://ncar.github.io/VaporDocumentationWebsite/pythonAPIReference/userModules/vapor.annotations.html","key":"E1CcF8IVby"},{"type":"text","value":". For a more in depth tutorial on annotations, visit our ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"JEO22568nZ"},{"type":"link","url":"https://projectpythia.org/vapor-python-cookbook/notebooks/annotation_example.html","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"annotation cookbook","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"PvU7E7qLVa"}],"urlSource":"https://projectpythia.org/vapor-python-cookbook/notebooks/annotation_example.html","key":"O9ktk83Sfw"},{"type":"text","value":". Here, we’ll add a colorbar for our wind variable and axis arrows to help with orientation.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"d1BWzkwBnb"}],"key":"DYgF5wVLYS"}],"key":"e8mSQejc0X"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"colorbar = wind.GetColorbarAnnotation()\ncolorbar.SetEnabled(True)\ncolorbar.SetCornerPosition((1,1))\n\nscene = ses.GetSceneAnnotations()\nscene.SetAxisArrowEnabled(True)\n\nses.Show()","key":"dUC66qjVLC"},{"type":"output","id":"DrF1luoAAVlOsTwg4WY12","data":[],"key":"at5AFxTK5J"}],"key":"iDiLhFvFhg"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"We can also generate an interactive visual using Vapor’s jupyter widget. This allows you to move the camera around as if you were using the Vapor application.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"E3DhhO3t2y"},{"type":"break","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"kAM9DQxh3k"},{"type":"emphasis","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Note: This widget requires an active kernel to operate. To try it out, run this notebook on your local machine.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"uVhHXICWOd"}],"key":"B5IgJRMFhv"}],"key":"QPrdtSJjRA"}],"key":"QVFBIPpSzW"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"from vapor import widget\nviz = widget.VaporVisualizerWidget(ses)\nviz","key":"zRzQWKi567"},{"type":"output","id":"sbIZ05d3koIb0jMs3dFoS","data":[],"key":"sbl05KokZU"}],"key":"RRk6FZ8oul"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Export","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"KK5QMLjTtd"}],"identifier":"export","label":"Export","html_id":"export","implicit":true,"key":"pd9Tdammvx"}],"key":"XRN1DKU4DG"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Now that we’ve created our visualization, we’ll want to save and export it. We can save visualization as a png, jpg, or tif using ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"obpZ2y3ksZ"},{"type":"inlineCode","value":"ses.Render()","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"O5YKZal2tT"}],"key":"iBDkNMJ5fi"}],"key":"sgwUOPiuWo"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"ses.Render(\"Katrina.tif\")","key":"dLYSN1MXdd"},{"type":"output","id":"Pyj_ERhuJ5isScPfAR2RV","data":[],"key":"JhxvVa6udk"}],"key":"hOS2lSz5xn"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"We can also use ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"z7wS06a6ou"},{"type":"inlineCode","value":"ses.Save()","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"PCkilTAVWX"},{"type":"text","value":" to save our session to a file. We can load this file in a different python script or in the Vapor GUI.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Ar0vPLwXwa"}],"key":"Gtk2Czd0Fl"}],"key":"gWUqQ77Q5L"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"ses.Save(\"Katrina.vs3\")","key":"RkZCaDrk9A"},{"type":"output","id":"rQg1cBKHdiBRKCi70cszG","data":[],"key":"hBpCeyiSrF"}],"key":"mlTVDpqMhJ"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"To access this session in a different Python script, we can use a line like this:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"peE2Ep1SCO"}],"key":"aLyx7xoTEC"}],"key":"NX9jCr2PBp"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"ses = session.Session()\nses.Load(\"Katrina.vs3\")","key":"UW7hWgGC7m"},{"type":"output","id":"ckJcpDGl71Y8R6_5eWVsr","data":[],"key":"XeCDkraFhH"}],"key":"V7EsIfqoql"}],"key":"SJn1diqQiJ"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"How to Cite This Cookbook","url":"/how-to-cite","group":"Preamble"},"next":{"title":"Opening Datasets","url":"/dataset-example","group":"Foundations of VAPOR Python"}}},"domain":"http://localhost:3000"}