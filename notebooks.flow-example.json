{"version":2,"kind":"Notebook","sha256":"f831c8457ad77979acacdef45faa7ce702c38be0fafa53ea745c6556ab934fd3","slug":"notebooks.flow-example","location":"/notebooks/flow_example.ipynb","dependencies":[],"frontmatter":{"title":"Advecting Flow Paths","content_includes_title":false,"kernelspec":{"name":"python3","display_name":"vapor","language":"python"},"jupytext":{},"authors":[{"nameParsed":{"literal":"Project Pythia Community","given":"Project Pythia","family":"Community"},"name":"Project Pythia Community","url":"https://projectpythia.org/","id":"contributors-myst-generated-uid-0"}],"open_access":true,"license":{"content":{"id":"Apache-2.0","url":"https://opensource.org/licenses/Apache-2.0","name":"Apache License 2.0","free":true,"osi":true},"code":{"id":"CC-BY-4.0","url":"https://creativecommons.org/licenses/by/4.0/","name":"Creative Commons Attribution 4.0 International","free":true,"CC":true}},"github":"https://github.com/projectpythia/vapor-python-cookbook","copyright":"2024","affiliations":[{"id":"University at Albany (State University of New York)","name":"University at Albany (State University of New York)"},{"id":"UCAR/NCAR","name":"UCAR/NCAR"}],"numbering":{"title":{"offset":1}},"edit_url":"https://github.com/projectpythia/vapor-python-cookbook/blob/main/notebooks/flow_example.ipynb","exports":[{"format":"ipynb","filename":"flow_example.ipynb","url":"/vapor-python-cookbook/build/flow_example-1fed9f3315e06a0c7d25122e8065e833.ipynb"}]},"widgets":{},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","data":{"lines_to_next_cell":0,"region_name":"md"},"children":[{"type":"paragraph","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"Vapor can advect and render flow paths through your data.","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"Wvq8lgb5LJ"}],"key":"KwCqaIqUQn"}],"key":"anKW58pgTk"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2023-06-22T17:21:39.854271Z","iopub.status.busy":"2023-06-22T17:21:39.853971Z","iopub.status.idle":"2023-06-22T17:21:46.140430Z","shell.execute_reply":"2023-06-22T17:21:46.139618Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"import example_utils\nfrom vapor import session, renderer, dataset, camera\n\nses = session.Session()\ndata = example_utils.OpenExampleDataset(ses)","key":"lrAOpizNWF"},{"type":"output","id":"Rj2jAz2qjYS9yz9LVwOw4","data":[{"output_type":"error","traceback":"\u001b[31m---------------------------------------------------------------------------\u001b[39m\n\u001b[31mModuleNotFoundError\u001b[39m                       Traceback (most recent call last)\n\u001b[36mCell\u001b[39m\u001b[36m \u001b[39m\u001b[32mIn[1]\u001b[39m\u001b[32m, line 1\u001b[39m\n\u001b[32m----> \u001b[39m\u001b[32m1\u001b[39m \u001b[38;5;28;01mimport\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34;01mexample_utils\u001b[39;00m\n\u001b[32m      2\u001b[39m \u001b[38;5;28;01mfrom\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34;01mvapor\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[38;5;28;01mimport\u001b[39;00m session, renderer, dataset, camera\n\u001b[32m      4\u001b[39m ses = session.Session()\n\n\u001b[36mFile \u001b[39m\u001b[32m~/work/vapor-python-cookbook/vapor-python-cookbook/notebooks/example_utils.py:20\u001b[39m\n\u001b[32m     16\u001b[39m     sys.path.append(\u001b[33m'\u001b[39m\u001b[33m..\u001b[39m\u001b[33m'\u001b[39m)\n\u001b[32m     19\u001b[39m \u001b[38;5;28;01mfrom\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34;01minspect\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[38;5;28;01mimport\u001b[39;00m signature\n\u001b[32m---> \u001b[39m\u001b[32m20\u001b[39m \u001b[38;5;28;01mimport\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34;01mnumpy\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[38;5;28;01mas\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34;01mnp\u001b[39;00m\n\u001b[32m     21\u001b[39m \u001b[38;5;28;01mfrom\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34;01mmath\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[38;5;28;01mimport\u001b[39;00m sin\n\u001b[32m     23\u001b[39m \u001b[38;5;28;01mdef\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34mSampleFunctionOnRegularGrid\u001b[39m(f, ext=\u001b[38;5;28;01mNone\u001b[39;00m, shape=\u001b[38;5;28;01mNone\u001b[39;00m):\n\n\u001b[31mModuleNotFoundError\u001b[39m: No module named 'numpy'","ename":"ModuleNotFoundError","evalue":"No module named 'numpy'"}],"key":"HXrUDpvevE"}],"key":"wekW6JvDUX"},{"type":"block","kind":"notebook-content","data":{"lines_to_next_cell":0,"region_name":"md"},"children":[{"type":"heading","depth":2,"position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Default advection","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"TLGlmx6oJC"}],"identifier":"default-advection","label":"Default advection","html_id":"default-advection","implicit":true,"key":"LybsURe7ME"},{"type":"paragraph","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"When you create a Flow renderer, the default advection will create a regularly dispersed grid of seed points and simulate a streamline advection in 2D or 3D, depending on the provided variables.","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"f9FkhvgVet"}],"key":"uWkmkQeum7"}],"key":"UsJnERVYsp"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2023-06-22T17:21:46.144664Z","iopub.status.busy":"2023-06-22T17:21:46.144287Z","iopub.status.idle":"2023-06-22T17:21:46.476511Z","shell.execute_reply":"2023-06-22T17:21:46.475881Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"# Use first 2 2D variables as our U,V for the flow advection\ndimension = 2\nU,V = data.GetDataVarNames(dimension)[0:2]\n\nren:renderer.FlowRenderer = data.NewRenderer(renderer.FlowRenderer)\nren.SetFieldVariableNames([U, V])\nses.GetCamera().ViewAll()\nses.Show()","key":"qv9gcpsqrl"},{"type":"output","id":"IZWeqhdVSyVtUFSvq2QmD","data":[],"key":"cRtQ4S9B9g"}],"key":"j1765m5ewR"},{"type":"block","kind":"notebook-content","data":{"lines_to_next_cell":0,"region_name":"md"},"children":[{"type":"heading","depth":2,"position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Rendering techniques","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"A2NlNuz0YM"}],"identifier":"rendering-techniques","label":"Rendering techniques","html_id":"rendering-techniques","implicit":true,"key":"XPOLkpnAEe"},{"type":"paragraph","position":{"start":{"line":4,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"The rendering of the flow paths can be configured. A few examples are shown below.\nCall help(renderer.FlowRenderer) to see additional options.","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"fZGeTN1e90"}],"key":"oDenOoudZ8"}],"key":"TzIXb7vOTd"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2023-06-22T17:21:46.479431Z","iopub.status.busy":"2023-06-22T17:21:46.479193Z","iopub.status.idle":"2023-06-22T17:21:46.630855Z","shell.execute_reply":"2023-06-22T17:21:46.630223Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"ren.SetRenderType(ren.RenderType.RenderTypeStream)\nren.SetRenderRadiusScalar(3)\nren.SetRenderGeom3D(True)\nren.SetColorMapVariableName(U)\nses.Show()","key":"OcYgsVQJyP"},{"type":"output","id":"jhLGgSrmrf98w2i1FMR5Y","data":[],"key":"td30PnKHtI"}],"key":"ze2jIUaeNA"},{"type":"block","kind":"notebook-content","data":{"lines_to_next_cell":0,"region_name":"md"},"children":[{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Rather than rendering the flow lines, you can also render the sample points that are taken along the flow path individually.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"mQI7W9sdeP"}],"key":"AHiLTyE9If"}],"key":"qbXsjTg9NU"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2023-06-22T17:21:46.633492Z","iopub.status.busy":"2023-06-22T17:21:46.633267Z","iopub.status.idle":"2023-06-22T17:21:46.691538Z","shell.execute_reply":"2023-06-22T17:21:46.690949Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"ren.SetRenderType(ren.RenderType.RenderTypeSamples)\nses.Show()","key":"zDtppoFwOw"},{"type":"output","id":"R-jP9HOd84YXANjCITQwR","data":[],"key":"q6lAWS5UQj"}],"key":"Vy6Y5fnFuA"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2023-06-22T17:21:46.694219Z","iopub.status.busy":"2023-06-22T17:21:46.694028Z","iopub.status.idle":"2023-06-22T17:21:46.820968Z","shell.execute_reply":"2023-06-22T17:21:46.820377Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"ren.SetRenderGlyphType(ren.GlpyhType.GlpyhTypeArrow)\nren.SetRenderRadiusScalar(7)\nses.Show()","key":"kKImNFzlhN"},{"type":"output","id":"2o2PSnrge4PgF464osWsH","data":[],"key":"mTBOeHhfsh"}],"key":"h19bm1YUTD"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2023-06-22T17:21:46.823965Z","iopub.status.busy":"2023-06-22T17:21:46.823519Z","iopub.status.idle":"2023-06-22T17:21:46.826861Z","shell.execute_reply":"2023-06-22T17:21:46.826229Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"# Reset the rendering style for the next section\nren.SetRenderRadiusScalar(3)\nren.SetRenderType(ren.RenderType.RenderTypeStream)","key":"BCQMgOmo4Q"},{"type":"output","id":"gD_MdiX7PceNZFi2U9fCE","data":[],"key":"R3ggKSZjx4"}],"key":"hZclvvSfry"},{"type":"block","kind":"notebook-content","data":{"region_name":"md"},"children":[{"type":"heading","depth":2,"position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Seeding the advection","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"wnsLbulxMo"}],"identifier":"seeding-the-advection","label":"Seeding the advection","html_id":"seeding-the-advection","implicit":true,"key":"edomKsijM6"},{"type":"paragraph","position":{"start":{"line":4,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"The seeds from which the advected particles start can be configured in a variety of manners.\nCall help(renderer.FlowRenderer) to see additional options.","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"QByiuGc6NO"}],"key":"EqoCkfxDZq"}],"key":"dK6yRzZjDc"},{"type":"block","kind":"notebook-content","data":{"lines_to_next_cell":0,"region_name":"md"},"children":[{"type":"heading","depth":3,"position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Uniform Distribution","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"HSOsfltcDr"}],"identifier":"uniform-distribution","label":"Uniform Distribution","html_id":"uniform-distribution","implicit":true,"key":"dxfy4SfChP"},{"type":"paragraph","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"This is the default. It creates a uniformly distributed grid of seed points over the area/volume of the advected region.","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"UgI0W4RMDI"}],"key":"ljcYO8kkoV"}],"key":"Yju6rw6ttD"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2023-06-22T17:21:46.829533Z","iopub.status.busy":"2023-06-22T17:21:46.829301Z","iopub.status.idle":"2023-06-22T17:21:47.056742Z","shell.execute_reply":"2023-06-22T17:21:47.056106Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"ren.SetSeedGenMode(ren.FlowSeedMode.UNIFORM)\nrake = ren.GetRakeRegion()\ndefaultRakeExtents = rake.GetExtents()\nrake.SetExtents((20, 20), (40, 40))\nprint(f\"Seeding a {ren.GetGridNumOfSeeds()} grid over {rake.GetExtents()}\")\nses.Show()\nrake.SetExtents(*defaultRakeExtents)","key":"P8EXoU7DzU"},{"type":"output","id":"uFes-492nRzok_3PPCEEm","data":[],"key":"bANyUsQrfJ"}],"key":"nvqAtX7UfY"},{"type":"block","kind":"notebook-content","data":{"lines_to_next_cell":0,"region_name":"md"},"children":[{"type":"heading","depth":3,"position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Random Distribution","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"Sr1Gby0rnJ"}],"identifier":"random-distribution","label":"Random Distribution","html_id":"random-distribution","implicit":true,"key":"VDHJnMeEAW"}],"key":"ikwR8FJPJC"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2023-06-22T17:21:47.059731Z","iopub.status.busy":"2023-06-22T17:21:47.059483Z","iopub.status.idle":"2023-06-22T17:21:47.119473Z","shell.execute_reply":"2023-06-22T17:21:47.118849Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"ren.SetSeedGenMode(ren.FlowSeedMode.RANDOM)\nprint(f\"Seeding {ren.GetRandomNumOfSeeds()} random points over {rake.GetExtents()}\")\nses.Show()","key":"vzhfwS1BQv"},{"type":"output","id":"QwtD4tEMYkxSnpnvOox9G","data":[],"key":"tVUer03ziR"}],"key":"ZcL9A1P0A5"},{"type":"block","kind":"notebook-content","data":{"lines_to_next_cell":0,"region_name":"md"},"children":[{"type":"heading","depth":3,"position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Biased Distribution","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"vmRJf9omlw"}],"identifier":"biased-distribution","label":"Biased Distribution","html_id":"biased-distribution","implicit":true,"key":"Drxh5OO15L"},{"type":"paragraph","position":{"start":{"line":4,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"This generates a random list of seed points however they are biased by a given variable.\nThe number of seed points can be higher or lower based on the value of the ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"BeCayrdTI6"},{"type":"inlineCode","value":"RakeBiasVariable","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"fpmOJOcT4a"},{"type":"text","value":".\nYou can set the ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"SeSjLUZ6gS"},{"type":"inlineCode","value":"RakeBiasStrength","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"nCNPfo4X7S"},{"type":"text","value":" to a negative value to invert the bias.","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"gCWufKkbG0"}],"key":"HCaBEj6dOT"}],"key":"E7SZoMKMDd"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2023-06-22T17:21:47.122371Z","iopub.status.busy":"2023-06-22T17:21:47.122118Z","iopub.status.idle":"2023-06-22T17:21:47.191623Z","shell.execute_reply":"2023-06-22T17:21:47.191104Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"ren.SetSeedGenMode(ren.FlowSeedMode.RANDOM_BIAS)\nren.SetRakeBiasVariable(V)\nren.SetRakeBiasStrength(1)\nprint(f\"Seeding {ren.GetRandomNumOfSeeds()} random points biased by {ren.GetRakeBiasVariable()} over {rake.GetExtents()}\")\nses.Show()","key":"t7H09FGCG6"},{"type":"output","id":"qUSvvs7HtdtT6Aym4rCyk","data":[],"key":"kUoCXvtRyG"}],"key":"RLln6Rx2qp"},{"type":"block","kind":"notebook-content","data":{"lines_to_next_cell":0,"region_name":"md"},"children":[{"type":"heading","depth":3,"position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Manual List","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"i8b3XF5CsM"}],"identifier":"manual-list","label":"Manual List","html_id":"manual-list","implicit":true,"key":"fQxBlJpeeg"},{"type":"paragraph","position":{"start":{"line":4,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"You can pass in a manually created list of seeds using a basic text file format.\nThe code below generates an example seed file and passes it to Vapor.\nThe full documentation for the seed file format can be found on Vapor’s website.","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"O3oA5hfN9i"}],"key":"Qaq5NWQmkO"}],"key":"itDgAhBLWn"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2023-06-22T17:21:47.194692Z","iopub.status.busy":"2023-06-22T17:21:47.194336Z","iopub.status.idle":"2023-06-22T17:21:47.240073Z","shell.execute_reply":"2023-06-22T17:21:47.239479Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"with open(\"flow_seeds.txt\", \"w\") as f:\n    print(\"# X, Y, Z, T (optional)\", file=f)\n    print(\"10, 10, 0\", file=f)\n    print(\"20, 20, 0\", file=f)\n\nren.SetSeedGenMode(ren.FlowSeedMode.LIST)\nren.SetSeedInputFilename(\"flow_seeds.txt\")\nses.Show()","key":"cnpcKxR8r7"},{"type":"output","id":"-8OBSdK1zLdeIbhT38A1k","data":[],"key":"PCc7TFLI3N"}],"key":"uNGpiyYEsi"}],"key":"X6d5uRkK6Y"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"Keyframing with Vapor","url":"/notebooks/keyframing-example","group":"Foundations of VAPOR Python"},"next":{"title":"Visualizer Widgets","url":"/notebooks/visualizer-widget-example","group":"Foundations of VAPOR Python"}}},"domain":"http://localhost:3000"}