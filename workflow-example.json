{"version":2,"kind":"Notebook","sha256":"520bbf9b0b66c126c083cffd320bb052d43dd06cbd13c03cbb08d4f2a0c67c40","slug":"workflow-example","location":"/notebooks/workflow_example.ipynb","dependencies":[],"frontmatter":{"title":"Generic Workflow","content_includes_title":false,"kernelspec":{"name":"python3","display_name":"vapor","language":"python"},"jupytext":{},"authors":[{"nameParsed":{"literal":"Project Pythia Community","given":"Project Pythia","family":"Community"},"name":"Project Pythia Community","url":"https://projectpythia.org/","id":"contributors-myst-generated-uid-0"}],"open_access":true,"license":{"content":{"id":"Apache-2.0","url":"https://opensource.org/licenses/Apache-2.0","name":"Apache License 2.0","free":true,"osi":true},"code":{"id":"CC-BY-4.0","url":"https://creativecommons.org/licenses/by/4.0/","name":"Creative Commons Attribution 4.0 International","free":true,"CC":true}},"github":"https://github.com/projectpythia/vapor-python-cookbook","copyright":"2024","numbering":{"title":{"offset":1}},"edit_url":"https://github.com/projectpythia/vapor-python-cookbook/blob/main/notebooks/workflow_example.ipynb","exports":[{"format":"ipynb","filename":"workflow_example.ipynb","url":"/vapor-python-cookbook/build/workflow_example-8e487a1eae836426f3a7a30f8dff7a09.ipynb"}]},"widgets":{},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","data":{"lines_to_next_cell":0,"region_name":"md"},"children":[{"type":"paragraph","position":{"start":{"line":4,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"This shows an example workflow with vapor.\nWe begin by creating a session and opening a dataset.\nYou can have multiple sessions open at the same time.","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"dUdlqEW5eB"}],"key":"bvO6h2P9XH"}],"key":"qvTVtiQapE"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"import example_utils\nfrom vapor import session, renderer, dataset, camera","key":"tmTVH3j1ky"},{"type":"output","id":"sfsrtRRrTiV8WchZO2JDr","data":[{"output_type":"error","traceback":"\u001b[31m---------------------------------------------------------------------------\u001b[39m\n\u001b[31mModuleNotFoundError\u001b[39m                       Traceback (most recent call last)\n\u001b[36mCell\u001b[39m\u001b[36m \u001b[39m\u001b[32mIn[1]\u001b[39m\u001b[32m, line 1\u001b[39m\n\u001b[32m----> \u001b[39m\u001b[32m1\u001b[39m \u001b[38;5;28;01mimport\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34;01mexample_utils\u001b[39;00m\n\u001b[32m      2\u001b[39m \u001b[38;5;28;01mfrom\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34;01mvapor\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[38;5;28;01mimport\u001b[39;00m session, renderer, dataset, camera\n\n\u001b[36mFile \u001b[39m\u001b[32m~/work/vapor-python-cookbook/vapor-python-cookbook/notebooks/example_utils.py:20\u001b[39m\n\u001b[32m     16\u001b[39m     sys.path.append(\u001b[33m'\u001b[39m\u001b[33m..\u001b[39m\u001b[33m'\u001b[39m)\n\u001b[32m     19\u001b[39m \u001b[38;5;28;01mfrom\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34;01minspect\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[38;5;28;01mimport\u001b[39;00m signature\n\u001b[32m---> \u001b[39m\u001b[32m20\u001b[39m \u001b[38;5;28;01mimport\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34;01mnumpy\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[38;5;28;01mas\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34;01mnp\u001b[39;00m\n\u001b[32m     21\u001b[39m \u001b[38;5;28;01mfrom\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34;01mmath\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[38;5;28;01mimport\u001b[39;00m sin\n\u001b[32m     23\u001b[39m \u001b[38;5;28;01mdef\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34mSampleFunctionOnRegularGrid\u001b[39m(f, ext=\u001b[38;5;28;01mNone\u001b[39;00m, shape=\u001b[38;5;28;01mNone\u001b[39;00m):\n\n\u001b[31mModuleNotFoundError\u001b[39m: No module named 'numpy'","ename":"ModuleNotFoundError","evalue":"No module named 'numpy'"}],"key":"kranmKmWxP"}],"key":"oFaynxlumJ"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"ses = session.Session()\ndata = example_utils.OpenExampleDataset(ses)","key":"MBCOsgVoU8"},{"type":"output","id":"O1MoW5wjWJsqiYf8PPLGY","data":[],"key":"qL1b9oDcis"}],"key":"w5eUtCeluK"},{"type":"block","kind":"notebook-content","data":{"lines_to_next_cell":0,"region_name":"md"},"children":[{"type":"heading","depth":2,"position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Dump the dataset metadata","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"ytvd912vvU"}],"identifier":"dump-the-dataset-metadata","label":"Dump the dataset metadata","html_id":"dump-the-dataset-metadata","implicit":true,"key":"SkWCQjkzz5"}],"key":"eMnxozmn4U"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"print(\"Time Coordinate Variable Name:\", data.GetTimeCoordVarName())\nprint(\"Coordinate Variable Names:\", data.GetCoordVarNames())\n\nprint(\"Dimensions:\")\nfor dim in data.GetDimensionNames():\n    print(f\"  {dim}:\", data.GetDimensionLength(dim, 0))\n\nprint(\"Data Variables:\")\nfor var in data.GetDataVarNames():\n    print(f\"  {var}\")\n    print(f\"    Time Varying:\", bool(data.IsTimeVarying(var)))\n    print(f\"    Dimensionality:\", data.GetVarGeometryDim(var))\n    print(f\"    Coordinates:\", data.GetVarCoordVars(var, True))\n    print(\"     Data Range:\", data.GetDataRange(var))","key":"Xb1vNDQdkr"},{"type":"output","id":"gGSiV20nq6wUwpFePuAAi","data":[],"key":"PxrdW83q2e"}],"key":"bepxzXFATn"},{"type":"block","kind":"notebook-content","data":{"lines_to_next_cell":0,"region_name":"md"},"children":[{"type":"heading","depth":2,"position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Render the first 2D variable as a pseudocolor","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"IonfNtpP2B"}],"identifier":"render-the-first-2d-variable-as-a-pseudocolor","label":"Render the first 2D variable as a pseudocolor","html_id":"render-the-first-2d-variable-as-a-pseudocolor","implicit":true,"key":"eqkh4DnCFA"}],"key":"qud6PqCZx4"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"first_2d_var = data.GetDataVarNames(2)[0]\nprint(f\"Rendering 2D variable {first_2d_var}\")\n\nren = data.NewRenderer(renderer.TwoDDataRenderer)\nren.SetVariableName(first_2d_var)\nren.GetPrimaryTransferFunction().SetMinMapValue(-1)\nren.GetPrimaryTransferFunction().SetMaxMapValue(1)\n\nses.GetCamera().ViewAll()\nses.Show()\n\nses.DeleteRenderer(ren)","key":"TuUGyRtMw2"},{"type":"output","id":"quV1dvyYcKekAodUuaQ1_","data":[],"key":"z2khfn0yv6"}],"key":"ijJdHXJFq6"},{"type":"block","kind":"notebook-content","data":{"lines_to_next_cell":0,"region_name":"md"},"children":[{"type":"heading","depth":2,"position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Render U10 and V10 as barbs over a map","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"lRSBUiIXIp"}],"identifier":"render-u10-and-v10-as-barbs-over-a-map","label":"Render U10 and V10 as barbs over a map","html_id":"render-u10-and-v10-as-barbs-over-a-map","implicit":true,"key":"VnkpHmO8VN"}],"key":"DRD5ZcmTAY"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# If your dataset is geo-referenced, this will automatically render a geographically correct map.\n# map_ren = data.NewRenderer(renderer.ImageRenderer)\n\nbarbs = data.NewRenderer(renderer.BarbRenderer)\nbarbs.SetDimensions(2)\nbarbs.SetFieldVariableNames(['U10', 'V10'])\nbarbs.SetLineThickness(2)\n\nses.Show()\nses.DeleteRenderer(barbs)","key":"ubM6X8vQC3"},{"type":"output","id":"8eCUSf9o6_nKVZv0Px3dq","data":[],"key":"Pb5IM02f8M"}],"key":"X20Gr1Emhn"},{"type":"block","kind":"notebook-content","data":{"lines_to_next_cell":0,"region_name":"md"},"children":[{"type":"heading","depth":2,"position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Simulate and render a flow advection","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"yZ2FAzonDJ"}],"identifier":"simulate-and-render-a-flow-advection","label":"Simulate and render a flow advection","html_id":"simulate-and-render-a-flow-advection","implicit":true,"key":"X0oNvA0eV5"}],"key":"w0pjy6jcqp"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"flow = data.NewRenderer(renderer.FlowRenderer)\nflow.SetFieldVariableNames(['U10', 'V10'])\n\nses.Show()\n\nses.DeleteRenderer(flow)","key":"UFuw5o2up8"},{"type":"output","id":"X7XDRpk2G0kwbEY4qqovE","data":[],"key":"beLswfYuST"}],"key":"ouBk6M5aoN"},{"type":"block","kind":"notebook-content","data":{"lines_to_next_cell":0,"region_name":"md"},"children":[{"type":"heading","depth":2,"position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Volume render a 3D variable","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"KiUzzJj0cH"}],"identifier":"volume-render-a-3d-variable","label":"Volume render a 3D variable","html_id":"volume-render-a-3d-variable","implicit":true,"key":"gbOSDZ5LnJ"}],"key":"dHc31mKmkU"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"volume = data.NewRenderer(renderer.VolumeRenderer)\nvolume.SetVariableName(\"V\")\n\ntf = volume.GetPrimaryTransferFunction()\ntf.SetOpacityList([1, 0, 0, 1])\n\nses.GetCamera().ViewAll()\nses.Show()\n\n# Show a colorbar for the volume rendering\ntf.ShowMatPlotLibColorbar(label=\"V\")","key":"Ow17mqu6cD"},{"type":"output","id":"Gchshpqa21iGx-jT8mGoW","data":[],"key":"jvXlkf80Ak"}],"key":"woB6OjmSbY"},{"type":"block","kind":"notebook-content","data":{"lines_to_next_cell":0,"region_name":"md"},"children":[{"type":"heading","depth":2,"position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Scale the dataset Z axis","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"JisVgnMvcf"}],"identifier":"scale-the-dataset-z-axis","label":"Scale the dataset Z axis","html_id":"scale-the-dataset-z-axis","implicit":true,"key":"BZrUX95vH1"},{"type":"paragraph","position":{"start":{"line":4,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Vapor will automatically scale the Z axis of a dataset to produce reasonable results.\nThis can be manually adjusted as shown below.","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"YGN6g1XqjB"}],"key":"jECReMUI8g"}],"key":"j4slrV5ohq"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"scales = data.GetTransform().GetScales()\nprint(\"Default dataset scaling =\", scales);\nscales[2] *= 0.3\ndata.GetTransform().SetScales(scales)\nprint(\"New dataset scaling =\", data.GetTransform().GetScales());\nses.Show()","key":"tLxvXQfVyC"},{"type":"output","id":"9yOiwcEYxcTfB0KDkjKzS","data":[],"key":"amthgvk0UW"}],"key":"rcPAcDZFzM"},{"type":"block","kind":"notebook-content","data":{"lines_to_next_cell":0,"region_name":"md"},"children":[{"type":"heading","depth":2,"position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Add axis annotations to the rendering","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"c1Mn66aWGI"}],"identifier":"add-axis-annotations-to-the-rendering","label":"Add axis annotations to the rendering","html_id":"add-axis-annotations-to-the-rendering","implicit":true,"key":"zj0RUoX6ti"}],"key":"LlvGhNB2I4"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"annotations = ses.GetAxisAnnotations()\nannotations.SetAxisAnnotationEnabled(True)\nses.Show()","key":"Wi9Xf8YeGb"},{"type":"output","id":"DSUXHN0W-NqPNxnjx86T-","data":[],"key":"lUehr2fdni"}],"key":"qGU8fD7oEC"},{"type":"block","kind":"notebook-content","data":{"lines_to_next_cell":0,"region_name":"md"},"children":[{"type":"heading","depth":2,"position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Export the session for use in the Vapor GUI application","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"BJ7kjdIuve"}],"identifier":"export-the-session-for-use-in-the-vapor-gui-application","label":"Export the session for use in the Vapor GUI application","html_id":"export-the-session-for-use-in-the-vapor-gui-application","implicit":true,"key":"xXjXi1sPjh"},{"type":"paragraph","position":{"start":{"line":4,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Sessions created in Python can be saved as a .vs3 file.\nThese files can then be opened in the Vapor GUI application and explored interactively.\nConversely, sessions created in the Vapor GUI can be loaded into Python with ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"L1sRyHGRVz"},{"type":"inlineCode","value":"Session.Load(path)","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"qZRfaDX6mN"}],"key":"tn3sLqdVYl"},{"type":"paragraph","position":{"start":{"line":8,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"text","value":"Since this example uses a dynamically generated dataset, the session cannot be saved as\nit would point to a dataset that does not exist on disk. If you were using a physical dataset,\nthis would work.","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"d91Pep2K8C"}],"key":"HhIQz8Ubwx"}],"key":"JxyVcZYckW"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"ses.Save(\"tutorial.vs3\")","key":"HcTT7KoPXF"},{"type":"output","id":"oV6sOmP8uezrDYZeZld9r","data":[],"key":"wLYTwtE2VN"}],"key":"Bi0nHJGgVW"}],"key":"GL1TwCz2jP"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"AGU 2023 Tutorial: Visualizing 2D and 3D Geoscience Data in Python","url":"/agu-2023-example","group":"Example workflows"},"next":{"title":"Visualizing the cloud-capped boundary layer","url":"/cloudfield-visualizer","group":"Example workflows"}}},"domain":"http://localhost:3000"}