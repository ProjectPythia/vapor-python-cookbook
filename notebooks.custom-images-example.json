{"version":2,"kind":"Notebook","sha256":"101046e8bff480dcdde98906a7f9c1dbd6312fc07d2f9d3814022363777c471e","slug":"notebooks.custom-images-example","location":"/notebooks/custom_images_example.ipynb","dependencies":[],"frontmatter":{"title":"Custom Map Images with Cartopy","content_includes_title":false,"kernelspec":{"name":"python3","display_name":"Feb18_vapor","language":"python"},"authors":[{"nameParsed":{"literal":"Project Pythia Community","given":"Project Pythia","family":"Community"},"name":"Project Pythia Community","url":"https://projectpythia.org/","id":"contributors-myst-generated-uid-0"}],"open_access":true,"license":{"content":{"id":"Apache-2.0","url":"https://opensource.org/licenses/Apache-2.0","name":"Apache License 2.0","free":true,"osi":true},"code":{"id":"CC-BY-4.0","url":"https://creativecommons.org/licenses/by/4.0/","name":"Creative Commons Attribution 4.0 International","free":true,"CC":true}},"github":"https://github.com/projectpythia/vapor-python-cookbook","copyright":"2024","affiliations":[{"id":"University at Albany (State University of New York)","name":"University at Albany (State University of New York)"},{"id":"UCAR/NCAR","name":"UCAR/NCAR"}],"numbering":{"title":{"offset":1}},"edit_url":"https://github.com/projectpythia/vapor-python-cookbook/blob/main/notebooks/custom_images_example.ipynb","exports":[{"format":"ipynb","filename":"custom_images_example.ipynb","url":"/vapor-python-cookbook/build/custom_images_exampl-cc2dde7e2663899943d7f86aab0870cf.ipynb"}]},"widgets":{},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Vapor has a built-in image renderer that can be used to draw land beneath your visualization. However, if you load the data using XArray or if the dataset lacks georeferencing information, the geographic extent of the image renderer will be incorrect. In this guide we will create a map image with custom bounds and custom Cartopy features that can be displayed with Vapor’s image renderer.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"pNUZcKYFKu"}],"key":"wT5koVybQQ"}],"key":"XvENJD7upU"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Requirements","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Bztbn4eS35"}],"identifier":"requirements","label":"Requirements","html_id":"requirements","implicit":true,"key":"WdDr1XzSik"}],"key":"ocP4UedIYN"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"This guide requires vapor and cartopy libraries. To access NASA satellite images, you will also need owslib: ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"CI5sAh3cZh"},{"type":"break","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"eDVEPj2KSm"},{"type":"break","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"XXF95bOkby"},{"type":"inlineCode","value":"conda install -c conda-forge -c ncar-vapor vapor","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"OG7gpKpSNv"},{"type":"break","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"RmDBiUDBkz"},{"type":"inlineCode","value":"conda install conda-forge::cartopy","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ifa8S9Do12"},{"type":"break","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"PJBigYUTDR"},{"type":"inlineCode","value":"conda install conda-forge::owslib","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Z2UZkzXy1s"}],"key":"gYLNed3xNi"}],"key":"dbCCcclBYP"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Data download:\nimport os\nimport requests\nimport zipfile\n\n# Plotting libraries:\nimport matplotlib.pyplot as plt\nimport cartopy.crs as ccrs\nimport cartopy.feature as cf\n\n# Data handling:\nimport xarray as xr\nimport numpy as np\n\n# Vapor:\nfrom vapor import renderer, dataset, session","key":"K4gBEHilla"},{"type":"output","id":"KIhRO-WDxrf6y3JPUdO6d","data":[{"output_type":"error","traceback":"\u001b[31m---------------------------------------------------------------------------\u001b[39m\n\u001b[31mModuleNotFoundError\u001b[39m                       Traceback (most recent call last)\n\u001b[36mCell\u001b[39m\u001b[36m \u001b[39m\u001b[32mIn[1]\u001b[39m\u001b[32m, line 7\u001b[39m\n\u001b[32m      4\u001b[39m \u001b[38;5;28;01mimport\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34;01mzipfile\u001b[39;00m\n\u001b[32m      6\u001b[39m \u001b[38;5;66;03m# Plotting libraries:\u001b[39;00m\n\u001b[32m----> \u001b[39m\u001b[32m7\u001b[39m \u001b[38;5;28;01mimport\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34;01mmatplotlib\u001b[39;00m\u001b[34;01m.\u001b[39;00m\u001b[34;01mpyplot\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[38;5;28;01mas\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34;01mplt\u001b[39;00m\n\u001b[32m      8\u001b[39m \u001b[38;5;28;01mimport\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34;01mcartopy\u001b[39;00m\u001b[34;01m.\u001b[39;00m\u001b[34;01mcrs\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[38;5;28;01mas\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34;01mccrs\u001b[39;00m\n\u001b[32m      9\u001b[39m \u001b[38;5;28;01mimport\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34;01mcartopy\u001b[39;00m\u001b[34;01m.\u001b[39;00m\u001b[34;01mfeature\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[38;5;28;01mas\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34;01mcf\u001b[39;00m\n\n\u001b[31mModuleNotFoundError\u001b[39m: No module named 'matplotlib'","ename":"ModuleNotFoundError","evalue":"No module named 'matplotlib'"}],"key":"FYiKTtoby4"}],"key":"ytOqNDdWVB"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"We will also use vapor’s Katrina sample dataset:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"GcIAp4TCwp"}],"key":"GhDCFfzGDX"}],"key":"fxDQSBk6OV"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"### This cell installs vapor's Katrina sample dataset ###\nurl = 'https://data.rda.ucar.edu/ds897.7/Katrina.zip'\nextract_to = './data'\nzip_name = \"Katrina.zip\"\ndata_file = './data/wrfout_d02_2005-08-29_02.nc'\n\n# Check if the data file already exists\nif not os.path.exists(data_file):\n    # Download zip\n    with requests.get(url, stream=True) as r:\n        r.raise_for_status()\n        with open(zip_name, 'wb') as f:\n            for chunk in r.iter_content(chunk_size=8192):\n                f.write(chunk)\n    # Extract the file\n    with zipfile.ZipFile(zip_name, 'r') as zip_ref:\n        zip_ref.extractall(extract_to)\n\n    # Clean up the zip file\n    os.remove(zip_name)\n\n    print(f\"Data downloaded and extracted to {data_file}\")\nelse:\n    print(f\"Data file already exists at {data_file}, skipping download and extraction.\")\n","key":"NEZzRZmIsl"},{"type":"output","id":"J7YQDHWNol2rKrDuVejyP","data":[],"key":"cnVUPaQslJ"}],"key":"i3pRXaDF9n"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Select Parameters for our Image","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"NDPwHc0YW5"}],"identifier":"select-parameters-for-our-image","label":"Select Parameters for our Image","html_id":"select-parameters-for-our-image","implicit":true,"key":"jO8WGaW8Bw"}],"key":"M32tItNeGA"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Specify where the new image file will be saved:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"olDg4hZ3rw"}],"key":"dMFECt3j9K"}],"key":"ZLcI6SACFe"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"targetDir = \"\"\nfileName = \"Katrina_map_image\"","key":"pqP2MgOWmU"},{"type":"output","id":"MYVJQ2cCyAdyRFHLzpDT6","data":[],"key":"ZI4AgTJw8Y"}],"key":"SZQYUGasmh"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Specify the lon/lat bounds of your image. Make sure it is exactly the same as the geographic extent of your dataset:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"la1RIGLTLa"}],"key":"pEN3i5UgKD"}],"key":"pvZl7TKrqV"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"### If you know the extent of your dataset, you can set your bounds manually ###\n# west = -95.8826\n# north = 32.95732\n# east = -82.84012\n# south = 21.616137\n\n### Or you can extract this information from your dataset ###\nds = xr.open_dataset(\"data/wrfout_d02_2005-08-29_02.nc\")\nwest = np.min(ds[\"XLONG\"].values)\neast = np.max(ds[\"XLONG\"].values)\nsouth = np.min(ds[\"XLAT\"].values)\nnorth = np.max(ds[\"XLAT\"].values)\n","key":"ZRWKrReW0V"},{"type":"output","id":"J971XQxT7XvuPG0xlgdkI","data":[],"key":"XRXOExxtrO"}],"key":"diOV1aThey"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"Choose the size of your output figure. Note: If your specified lat/lon extents have a different aspect ratio than\nyour width and height, the geotiff will have either of its dimensions scaled to\nmatch the aspect ratio of the specified extents of the west/north/east/south\nvariables.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"rxP5g7Td0d"}],"key":"qX9hOCkywB"}],"key":"SR1DZicDjx"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"width = 1920\nheight = 1080\ndpi = 42","key":"F2s6rYa6Gu"},{"type":"output","id":"zIXYURZuugNWSx-XDJomz","data":[],"key":"TWCRslsm1p"}],"key":"Rkg6suGUls"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"strong","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Optional:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"HgKtjtWxSY"}],"key":"IJppmSgxlA"},{"type":"text","value":" to include a satellite image, identify the url and layer of the image. The following cell selects a Blue Marble image from NASA. (You can try other layers, like the VIIRS city lights layer)","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"OCp20CHJPc"}],"key":"zAyOupyYCd"}],"key":"t7jBGom1VU"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"url = \"https://map1c.vis.earthdata.nasa.gov/wmts-geo/wmts.cgi\"\nlayer = \"BlueMarble_ShadedRelief\"\n# layer = 'VIIRS_CityLights_2012'","key":"hFW0CZi8ev"},{"type":"output","id":"WRusKyVbD3_07JG8RrOOI","data":[],"key":"HvxjTtRFms"}],"key":"HDeXzaQ8fP"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Create a cartopy map","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"iLL6qXzyV8"}],"identifier":"create-a-cartopy-map","label":"Create a cartopy map","html_id":"create-a-cartopy-map","implicit":true,"key":"fC2PfXLK4N"}],"key":"JCbRoIycT9"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Set up your figure and optionally add a satellite image","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"i4UpJ0ulfb"}],"key":"qMBA6K3n4B"}],"key":"qSqaPhBB7B"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"fig = plt.figure(\n    figsize=(width/dpi, height/dpi), \n    tight_layout=True \n)\nax = fig.add_subplot(1, 1, 1, projection=ccrs.PlateCarree())\n\nax.set_extent(\n    [west, east, south, north], \n    crs=ccrs.PlateCarree()\n)\n\nax.add_wmts(url, layer) # Adds the satellite image we chose in the previous cell. Remove this line for native Cartopy maps","key":"XAbHofA0a5"},{"type":"output","id":"U7jSoucpIUiz-5ScPlFz8","data":[],"key":"h7ifwlkMxo"}],"key":"FCdbLBW2fR"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Add Cartopy Features","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"VlLvf13C8V"}],"identifier":"add-cartopy-features","label":"Add Cartopy Features","html_id":"add-cartopy-features","implicit":true,"key":"Zq21jHJ3bv"}],"key":"Xsd7sHioLQ"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"For this example, we’ll add state borders, coastlines, and roads","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"aJAUmufLNY"}],"key":"dDIDEAMhgH"}],"key":"Q6eqfpqoOs"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Borders\nax.add_feature(\n    cf.STATES,\n    edgecolor='darkgray', \n    facecolor='none',\n    linewidth=3\n)","key":"cpR6CQVGkQ"},{"type":"output","id":"3YDV1jTmFTjik8MkQypJK","data":[],"key":"hWQQEXr04y"}],"key":"dylOLBhoUK"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Coastlines\nax.add_feature(\n    cf.COASTLINE,\n    edgecolor='lightgray', \n    facecolor='none',\n    linewidth=3\n)","key":"vUc5FSfgoH"},{"type":"output","id":"kDCANRJ1jl3ZnMgO1MAPg","data":[],"key":"b3wXkrvyFM"}],"key":"HoUmg4l7kx"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Roads\nax.add_feature(\n    cf.NaturalEarthFeature('cultural', 'roads_north_america', '10m'), \n    edgecolor='yellow', \n    facecolor='none'\n)","key":"paKh2wgSTb"},{"type":"output","id":"9J7IzZdDlwX2N7Dh7X8vt","data":[],"key":"Zekrqi2X3k"}],"key":"BFiip8n5je"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"View and save image","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"arJuKAa23f"}],"identifier":"view-and-save-image","label":"View and save image","html_id":"view-and-save-image","implicit":true,"key":"eMyGULCuXi"}],"key":"EB5xmCnt8S"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Save figure\ntiffFile = targetDir + fileName + \".tif\"\nfig.savefig( tiffFile,\n             bbox_inches='tight',\n             pad_inches=0\n)","key":"S6qYzDLcOk"},{"type":"output","id":"oYHw_vPzIqk8_Zli9aK2Y","data":[],"key":"CAg8wLeRCc"}],"key":"ElXZm28uhJ"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"fig","key":"Nfh0vua4ML"},{"type":"output","id":"PewNcGcRFP6LxutGgr3dy","data":[],"key":"OibH3rr0vr"}],"key":"edkCTnFiIY"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Example: loading the map as an image in Vapor","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"t4dY6fjuyZ"}],"identifier":"example-loading-the-map-as-an-image-in-vapor","label":"Example: loading the map as an image in Vapor","html_id":"example-loading-the-map-as-an-image-in-vapor","implicit":true,"key":"kPinaz3h3W"}],"key":"wAIdBvpIwh"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"To view our map in Vapor, create an image renderer and set its path to the file we just created. ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"j9oHfzePrR"},{"type":"break","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Gow6gLoe7x"},{"type":"strong","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Important:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"OBGYRZQsZS"}],"key":"ZhZ3QFa4lI"},{"type":"text","value":" our image does not contain georeferencing information, to be sure the set ‘IsGeoRef’ to false","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"kRKnjil0L8"}],"key":"vxmqnUHIZ3"}],"key":"VnLIOiENy6"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"ses = session.Session()\ndata = ses.OpenDataset(dataset.WRF, [\"data/wrfout_d02_2005-08-29_02.nc\"])\nimage = data.NewRenderer(renderer.ImageRenderer)\nimage.SetImagePath(\"./Katrina_map_image.tif\")\nimage.SetIsGeoRef(False)\n\n# Add visualization of the hurricane's clouds\nclouds = data.NewRenderer(renderer.VolumeRenderer) # Render clouds\nclouds.SetVariableName(\"QCLOUD\")\nclouds_tf = clouds.GetTransferFunction(\"QCLOUD\")\nclouds_tf.LoadBuiltinColormap(\"Sequential/BlackWhite\")\nclouds_tf.SetColorRGBList([(r, g, b) for r, g, b, _ in \n                           list(reversed(clouds_tf.GetMatPlotLibColormap().colors))])\nclouds_tf.SetOpacityControlPoints([[0,0],[0.00001,0.01], [0.0001, 0.1], [0.0010,0.9]])\nses.GetCamera().LookAt([-1190444, 1882360, 770176], [-420811, 2737271, 5699], [0.41853764, 0.35630071, 0.83538976])\nses.Show()","key":"VODGF2I5OQ"},{"type":"output","id":"yfO8RGjufM6L6_4BNU5fN","data":[],"key":"XnqHCw2QAC"}],"key":"ZWhrcHCxgk"}],"key":"dBhxNX7ZI1"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"Visualizer Widgets","url":"/notebooks/visualizer-widget-example","group":"Foundations of VAPOR Python"},"next":{"title":"AGU 2023 Tutorial: Visualizing 2D and 3D Geoscience Data in Python","url":"/notebooks/agu-2023-example","group":"Example workflows"}}},"domain":"http://localhost:3000"}