{"version":2,"kind":"Notebook","sha256":"418533bfe73c142d904df219923e2ee8a5b024644430537da998d74efc8fa66b","slug":"xarray-example","location":"/notebooks/xarray_example.ipynb","dependencies":[],"frontmatter":{"title":"Rendering XArray data with Vapor","content_includes_title":false,"kernelspec":{"name":"python3","display_name":"vapor","language":"python"},"jupytext":{},"authors":[{"nameParsed":{"literal":"Project Pythia Community","given":"Project Pythia","family":"Community"},"name":"Project Pythia Community","url":"https://projectpythia.org/","id":"contributors-myst-generated-uid-0"}],"open_access":true,"license":{"content":{"id":"Apache-2.0","url":"https://opensource.org/licenses/Apache-2.0","name":"Apache License 2.0","free":true,"osi":true},"code":{"id":"CC-BY-4.0","url":"https://creativecommons.org/licenses/by/4.0/","name":"Creative Commons Attribution 4.0 International","free":true,"CC":true}},"github":"https://github.com/projectpythia/vapor-python-cookbook","copyright":"2024","numbering":{"title":{"offset":1}},"edit_url":"https://github.com/projectpythia/vapor-python-cookbook/blob/main/notebooks/xarray_example.ipynb","exports":[{"format":"ipynb","filename":"xarray_example.ipynb","url":"/vapor-python-cookbook/build/xarray_example-328a2c84bd0c2e7f4e0c3fffde8479e0.ipynb"}]},"widgets":{},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","data":{"lines_to_next_cell":0,"region_name":"md"},"children":[{"type":"paragraph","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"While it is recommended to import data into Vapor using ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"SOU06JrYl3"},{"type":"inlineCode","value":"session.LoadDataset()","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"Ff7xxii3nk"},{"type":"text","value":", Vapor also supports importing data from XArray datasets.","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"B7N4Q82Car"}],"key":"pfXucrLX9I"}],"key":"ckeIko8zrg"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"The following cell will download sample data from NCARâ€™s ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Fqg5HbZAKi"},{"type":"link","url":"https://rda.ucar.edu/datasets/ds897.7/dataaccess/#","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Research Data Archives","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"FQBdum9t09"}],"urlSource":"https://rda.ucar.edu/datasets/ds897.7/dataaccess/#","key":"BJs4OqhgQ4"},{"type":"text","value":".","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"lQx9Roc1kg"}],"key":"SVsX8BDMbS"}],"key":"QJmOkxShVx"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"import os\nimport requests\nimport zipfile\nurl = 'https://data.rda.ucar.edu/ds897.7/Katrina.zip'\nextract_to = './data'\nzip_name = \"Katrina.zip\"\ndata_file = './data/wrfout_d02_2005-08-29_02.nc'\n\n# Check if the data file already exists\nif not os.path.exists(data_file):\n    # Download zip\n    with requests.get(url, stream=True) as r:\n        r.raise_for_status()\n        with open(zip_name, 'wb') as f:\n            for chunk in r.iter_content(chunk_size=8192):\n                f.write(chunk)\n    # Extract the file\n    with zipfile.ZipFile(zip_name, 'r') as zip_ref:\n        zip_ref.extractall(extract_to)\n\n    # Clean up the zip file\n    os.remove(zip_name)\n\n    print(f\"Data downloaded and extracted to {data_file}\")\nelse:\n    print(f\"Data file already exists at {data_file}, skipping download and extraction.\")\n","key":"iFLk8c9odB"},{"type":"output","id":"q9Y1KuxyzG9gCC9mc9OY4","data":[{"output_type":"stream","name":"stdout","text":"Data downloaded and extracted to ./data/wrfout_d02_2005-08-29_02.nc\n"}],"key":"CU5YixXb2U"}],"key":"P9wxJokuZd"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"In order to pass XArray data to Vapor, create a data set within your vapor session using ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"a1mgdrVQSb"},{"type":"inlineCode","value":"Session.CreatePythonDataset()","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"fBVUMWkkz5"},{"type":"text","value":".","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"frO9slihLx"}],"key":"TEGu2Jss3T"}],"key":"FZ0fY2McA8"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2023-06-22T17:22:30.438458Z","iopub.status.busy":"2023-06-22T17:22:30.438155Z","iopub.status.idle":"2023-06-22T17:22:35.224291Z","shell.execute_reply":"2023-06-22T17:22:35.223575Z"},"lines_to_next_cell":1},"children":[{"type":"code","lang":"python","executable":true,"value":"from vapor import session, renderer, dataset, camera\nimport xarray as xr\n\nses = session.Session()\ndata = ses.CreatePythonDataset()","key":"wXvAX6vJfJ"},{"type":"output","id":"EP4REHobZMkAnJfAgmm1P","data":[{"output_type":"error","traceback":"\u001b[31m---------------------------------------------------------------------------\u001b[39m\n\u001b[31mModuleNotFoundError\u001b[39m                       Traceback (most recent call last)\n\u001b[36mCell\u001b[39m\u001b[36m \u001b[39m\u001b[32mIn[2]\u001b[39m\u001b[32m, line 1\u001b[39m\n\u001b[32m----> \u001b[39m\u001b[32m1\u001b[39m \u001b[38;5;28;01mfrom\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34;01mvapor\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[38;5;28;01mimport\u001b[39;00m session, renderer, dataset, camera\n\u001b[32m      2\u001b[39m \u001b[38;5;28;01mimport\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34;01mxarray\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[38;5;28;01mas\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34;01mxr\u001b[39;00m\n\u001b[32m      4\u001b[39m ses = session.Session()\n\n\u001b[31mModuleNotFoundError\u001b[39m: No module named 'vapor'","ename":"ModuleNotFoundError","evalue":"No module named 'vapor'"}],"key":"hincq4WDJ6"}],"key":"vtmvzjthjS"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"First we will load the dataset with XArray","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"CZNsWyAnbP"}],"key":"zle5c5lZSC"}],"key":"VOkdF0nHWQ"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"ds = xr.open_dataset(\"data/wrfout_d02_2005-08-29_02.nc\")\nds","key":"w8z0BlQyGO"},{"type":"output","id":"hspi9Wf6vHIic-qPTXLPA","data":[],"key":"qrcGzZs5uq"}],"key":"nDF9PLMhU0"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"We can add variables from our XArray dataset to our Vapor dataset using ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"adU4TjstTL"},{"type":"inlineCode","value":"dataset.AddXarrayDataset()","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"fXFzEXjP5n"},{"type":"text","value":". We should be careful though -- once the data is loaded with XArray, Vapor cannot determine if a dimension is spatial or temporal. Because of this, we should make sure the data array we pass contains only spatial dimensions.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"EZDYjUGzVf"}],"key":"Bf3UcVETp7"}],"key":"aFwcpcwXRc"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"U10 = ds[\"U10\"]\nU10","key":"O9NgJLIR4w"},{"type":"output","id":"9lGFEx1a8f2-B02P1j0Lw","data":[],"key":"EbAwcClpcg"}],"key":"HzxRkqCG2O"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"In this case, U10 should be a two dimensional variable (longitude and latitude). But notice that in the DataArray we just created we still have a time dimension. Because of this, Vapor will incorrectly treat it as a 3 dimensional variable. Before passing the DataArray to Vapor, we should remove the temporal dimension.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"QSkOFhwRap"}],"key":"aJoGEEK4B5"}],"key":"qqz8JFfBVR"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"U10 = ds[\"U10\"].squeeze(\"Time\")\nU10","key":"jiV2XxB8wy"},{"type":"output","id":"P4Dr7a2nvZXwQn6ycQBG4","data":[],"key":"MqqmNvejLT"}],"key":"Devs35Df9C"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Now, we can add this variable to our Vapor dataset with ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"UW5YPyijmP"},{"type":"inlineCode","value":"dataset.AddXArrayData()","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Gm4CJKZqLQ"},{"type":"text","value":". The first parameter will be the variable name that we want to appear in our Vapor dataset, while the second parameter is the XArray DataArray.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"W3Otbm1A8Z"}],"key":"qrWjrhyEMZ"}],"key":"TZEK8qqdIV"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"data.AddXArrayData(\"U10\", U10)","key":"Mdnb1Rc9Au"},{"type":"output","id":"N-Vqg4CkH7H8DQIcPZipy","data":[],"key":"vmvn6wP1oE"}],"key":"suzf47vWRm"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Now, we can render our data using any of Vaporâ€™s renderers.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"FdcGmzSC4k"}],"key":"LYJt4rtXKD"}],"key":"MYxDteTXiM"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2023-06-22T17:22:35.985416Z","iopub.status.busy":"2023-06-22T17:22:35.985206Z","iopub.status.idle":"2023-06-22T17:22:36.111916Z","shell.execute_reply":"2023-06-22T17:22:36.111344Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"# Create a renderer for the data\nren = data.NewRenderer(renderer.WireFrameRenderer)\nren.SetVariableName(\"U10\")","key":"O5J20M6fds"},{"type":"output","id":"bbAO9GH7BwiNI6YSchBKD","data":[],"key":"ckjH7I0gUs"}],"key":"WTxotarsWx"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2023-06-22T17:22:36.114866Z","iopub.status.busy":"2023-06-22T17:22:36.114519Z","iopub.status.idle":"2023-06-22T17:22:36.239313Z","shell.execute_reply":"2023-06-22T17:22:36.238704Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"# Show the rendering\nses.GetCamera().ViewAll()\nses.Show()","key":"vFlafw1Qah"},{"type":"output","id":"yTTgBJCe7S69JiOcQcCzV","data":[],"key":"U9HWSh42Q7"}],"key":"agsWaIsd24"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2023-06-22T17:22:36.242200Z","iopub.status.busy":"2023-06-22T17:22:36.241950Z","iopub.status.idle":"2023-06-22T17:22:36.258140Z","shell.execute_reply":"2023-06-22T17:22:36.257530Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"ses.DeleteRenderer(ren)","key":"kUFU8lBriA"},{"type":"output","id":"0hIFxF09v1rarKWgjo2q2","data":[],"key":"iXnFqPVlL4"}],"key":"m2gCCWqpHC"},{"type":"block","kind":"notebook-content","data":{"lines_to_next_cell":0,"region_name":"md"},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"The same process can be used to render a 3D variable","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"hBXYrFaNFN"}],"key":"a03mLvEaUH"}],"key":"qteiq5nOMh"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2023-06-22T17:22:36.261106Z","iopub.status.busy":"2023-06-22T17:22:36.260850Z","iopub.status.idle":"2023-06-22T17:22:36.267776Z","shell.execute_reply":"2023-06-22T17:22:36.267211Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"data.AddXArrayData(\"U\", ds[\"U\"].squeeze(\"Time\"))","key":"OVG3aMGBxQ"},{"type":"output","id":"Z_gC6LQSg-rGQMRvx1VbF","data":[],"key":"ocsG0j6rS2"}],"key":"VwZ6IdGywY"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"ren = data.NewRenderer(renderer.WireFrameRenderer)\nren.SetVariableName(\"U\")\nses.GetCamera().LookAt([ 138.64364963, -213.94716727,  293.46022828],\n                       [157., 154.,   0.],\n                       [0.04815987, 0.62133843, 0.78206086])","key":"yneRizH8CM"},{"type":"output","id":"h8-LD5oRio7atqRnaBMgP","data":[],"key":"KNJeP2OK0v"}],"key":"dVqJIqSvhu"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"ses.Show()","key":"qs7mICwNw5"},{"type":"output","id":"X_RHlLUulxyBlRKuijthi","data":[],"key":"a1CWhCOshr"}],"key":"N6e6Uc5EQH"}],"key":"NPTPS6fsFi"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"Rendering Numpy data with Vapor","url":"/numpy-example","group":"Foundations of VAPOR Python"},"next":{"title":"Controlling the Camera","url":"/camera-example","group":"Foundations of VAPOR Python"}}},"domain":"http://localhost:3000"}